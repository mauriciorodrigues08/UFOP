VARIÁVEIS
- São alocações na memoria do computador onde pode-se armazenar um valor
- Tipos de variável:
	. int: numero inteiro.
	. double: especifica números reais.
	. char: caracter único.
- Em C, os tipos fundamentais são palavras reservadas escritas em minúsculo.
- Identificador
	. é o nome da variável.
	. case sensitive: em C, existe diferenciação entre maiusculas e minusculas.
	. escolha nomes significativos para facilitar a documentação e entendimento do código.
- Declaração de variáveis
	. em C, a declaração envolve um tipo e um identificador
	   ex: int number
	   o tipo "int" especifica que a variável armazenada será do tipo inteiro.
	   o identificador number é o nome da variável
	. é possível declarar mais de uma variável por linha
	   ex: int number1, number2, number3;
	   no caso, serão criadas 3 variáveis inteiras
	. é possível declarar variáveis em qualquer parte do código, porém antes de ser utilizada.

COMANDOS DE ENTRADA E SAÍDA
- Função printf()
	. a função printf() é parte da biblioteca <stdio.h>
	. utilizada para imprimir na tela
	   ex: printf("Hello word!"\n);
	. como imprimir um número inteiro
	   ex: int n = 10;
	       printf("%d", n);
	. %d é usado para declarar que ali será substituído por um número inteiro.
	. substituições no printf()
		%d: int
		%ld: long long
		%f: float
		%lf: double
		%c: char
		%s: string
	. é possível concatenar texto e variáveis na função printf()

- Formatando a Saída
	. a função printf() permite formatar a saída de dados.
	. é possível especificar o número de casas decimais (no caso de float a double) e o número de caracteres
	. ex:   %3d: um int utilizando no mínimo 3 espaços.
		%-3d: um int utilizando no mínimo 3 espaços alinhado à esquerda.
		%5s: uma string utilizando no mínimo 5 espaços.
		%.3f: um float utilizando 3 casas decimais.
		%3f: um float utilizando no mínimo 3 espaços.
		%5.3f: um float utilizando 3 casas decimais e no mínimo 5 espaços.
	. caracteres especiais
		\n: quebra de linha
		\t: tabulação adicional (tab)
		\": aspas duplas
		\': aspas simples ou apóstrofo
		\\: barra invertida
		\a: 

- A função scan()
	. utilizada para receber uma entrada padrão
	. a função scanf() altera o valor de variáveis
	. alterar conteúdo equivale a modificar o que está na memória
	. por essa razão, sempre passamos um endereço de memória para a função scanf()
	. como utilizar
		scanf(formato, endereço de memória);
	. para obter o endereço de memória utilizamos o caracter &
	ex:	int x;
		scanf("%d", &x);
		//&x retorna o endereço de memória onde o %d será armazenado.
	. a função scanf() utiliza os mesmos formatos que o printf()






