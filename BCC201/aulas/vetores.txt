O QUE É UM VETOR/ARRAY?
- uma variável composta homogênea unidimensional
- formada por uma sequência de valores, todos do mesmo tipo
- alocados sequencialmente na memória
- que são acessados usando um único identificador (nome)

BENEFÍCIOS DE USO DO ARRAY
- ajudam a manter uma coleção de dados
- permitem manter as informações organizadas
- permitem operações com o volume de dados neles inseridos
- antes precisávamos de n variáveis pra guardar n valores, agora teremos uma única variável para armazenar n valores

VETORES EM C
- conhecidos em C/C++ como arrays.
- correspondem a posições de memória.
- são identificados por um nome.
- individualizadas por índices.
- conteúdo do mesmo tipo.
- em resumo: vetores são posições de memória identificadas por um mesmo nome, individualizadas por índices e cujo conteúdo é do mesmo tipo.

DECLARAÇÃO DE ARRAY
<tipo> identificador [<número de posições>];
- tipo: int, float, double, etc.
- identificador: é o nome da variável que identifica o vetor.
- número de posições: é o tamanho do vetor!
- ex:
  int vetor[10] //vetor de inteiros com 10 posições
  float vetor[5] //vetor de float com 5 posições
- ao declaramos um vetor, os seus elementos não são inicializados.
- porem, é possível atribuir valores iniciais.
- ex:
  int vetor[3] = {0, 1, 2};
  int vetor[5] = {5.2, 10.4, 20.10003, 1.31, 60.302};

EXEMPLO DE UTILIZAÇÃO: BUSCA DE ELEMENTOS
- Dada uma coleção de n elementos, pretende-se saber se um determinado elemento está presente nessa coleção. Para efeitos práticos, vamos supor que essa coleção é implementada como sendo um vetor de n elementos inteiros:
vetor[0]..vetor[n-1]

- Uma possível solução é percorrer o vetor desde a primeira até a última posição em busca do valor
  . Para cada posição i, verificamos se vetor[i] é igual ao valor
procurado. 
  . Se chegarmos ao fim do vetor sem sucesso, podemos afirmar que o
valor procurado não está no vetor

ENVIANDO ARRAYS PARA UMA FUNÇÃO
int buscaLinear(int vetor[], int tamanho, int valor);
ou
int buscaLinear(int *vetor, int tamanho, int valor);

- as duas declarações estão corretas
- ex:
  int buscaLinear(int vetor[], int tamanho, int valor) {
    for (int i = 0; i < tamanho; i++){
      if (vetor[i] == valor) {
      return i;
      }
    }
  return -1;
  }

  . o for irá percorrer o vetor e buscar pelo valor desejado
  . se for encontrado, o índice do vetor em que ele se encontra será retornado
  . se não for encontrado, a função retornará -1 e a situação será tratada na main

VETORES E FUNÇÕES
- para trabalhar com vetores em funções é necessário passar como parâmetro o identificador do vetor e seu tamanho
- ex:
  int buscaLinear(int vetor[], int tamanho, int valor);

ARITIMÉTICA DE PONTEIROS
- v[0] é equivalente a *v, que é equivalente a *(v+0) //ou seja, posição 0
- v[4] é equivalente a *(v+4); //ou seja, posição 3